name: Kind scaffolding test

on:
  pull_request:
    branches: [ 'main', 'release-*' ]

permissions: read-all

jobs:
  e2e-tests:
    name: test tree creation with scaffolding
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false # Keep running if one leg fails.
      matrix:
        k8s-version:
        - v1.22.x
        - v1.23.x

    env:
      REGISTRY_NAME: registry.local
      REGISTRY_PORT: 5000
      KO_DOCKER_REPO: registry.local:5000/trillian

    steps:
    - uses: actions/checkout@2541b1294d2704b0964813337f33b291d3f8596b # v2.4.0
    - uses: actions/setup-go@b22fbbc2921299758641fab08929b4ac52b32923 # v2.2.0
      with:
        go-version: '1.19'
        check-latest: true

    - uses: ko-build/setup-ko@v0.6

    - name: Install yq
      uses: mikefarah/yq@70403375d7b96075bd68b40c434807cff1593568 # v4.25.1

    - name: Setup mirror
      uses: chainguard-dev/actions/setup-mirror@main
      with:
        mirror: mirror.gcr.io

    - name: Setup kind cluster
      uses: chainguard-dev/actions/setup-kind@main
      with:
        k8s-version: ${{ matrix.k8s-version }}
        cluster-suffix: c${{ github.run_id }}.local

    - name: Setup knative
      uses: chainguard-dev/actions/setup-knative@main
      with:
        k8s-version: ${{ matrix.k8s-version }}
        cluster-suffix: c${{ github.run_id }}.local

    - name: Install Trillian
      run: |
        echo '::group:: install Trillian scaffolding'
        ko apply -BRf ./examples/deployment/kubernetes/scaffolding
        echo '::endgroup::'
        echo '::group:::' waiting for services to come up
        kubectl wait -n trillian-system --for=condition=Ready --timeout=5m ksvc --all
        echo '::endgroup::'

    - name: Create a tree on it
      run: |
        echo '::group:: install create tree job'
        kubectl apply -Rf ./examples/deployment/kubernetes/createtree
        echo '::endgroup::'
        echo '::group:::' waiting for job to complete'
        kubectl wait -n createtree --for=condition=Complete --timeout=5m jobs createtree
        echo '::endgroup::'
        kubectl -n createtree get cm trillian-tree -ojsonpath='{.data.treeID}'

    - name: Collect diagnostics
      if: ${{ failure() }}
      uses: chainguard-dev/actions/kind-diag@84c993eaf02da1c325854fb272a4df9184bd80fc # main
