// Automatically generated by MockGen. DO NOT EDIT!
// Source: github.com/google/trillian/extension (interfaces: ExtensionRegistry)

package extension

import (
	gomock "github.com/golang/mock/gomock"
	storage "github.com/google/trillian/storage"
)

// Mock of ExtensionRegistry interface
type MockExtensionRegistry struct {
	ctrl     *gomock.Controller
	recorder *_MockExtensionRegistryRecorder
}

// Recorder for MockExtensionRegistry (not exported)
type _MockExtensionRegistryRecorder struct {
	mock *MockExtensionRegistry
}

func NewMockExtensionRegistry(ctrl *gomock.Controller) *MockExtensionRegistry {
	mock := &MockExtensionRegistry{ctrl: ctrl}
	mock.recorder = &_MockExtensionRegistryRecorder{mock}
	return mock
}

func (_m *MockExtensionRegistry) EXPECT() *_MockExtensionRegistryRecorder {
	return _m.recorder
}

func (_m *MockExtensionRegistry) GetLogStorage(_param0 int64) (storage.LogStorage, error) {
	ret := _m.ctrl.Call(_m, "GetLogStorage", _param0)
	ret0, _ := ret[0].(storage.LogStorage)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockExtensionRegistryRecorder) GetLogStorage(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "GetLogStorage", arg0)
}

func (_m *MockExtensionRegistry) GetMapStorage(_param0 int64) (storage.MapStorage, error) {
	ret := _m.ctrl.Call(_m, "GetMapStorage", _param0)
	ret0, _ := ret[0].(storage.MapStorage)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockExtensionRegistryRecorder) GetMapStorage(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "GetMapStorage", arg0)
}
