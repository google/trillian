// Automatically generated by MockGen. DO NOT EDIT!
// Source: github.com/google/trillian/storage/cache (interfaces: NodeStorage)

package cache

import (
	gomock "github.com/golang/mock/gomock"
	storage "github.com/google/trillian/storage"
)

// Mock of NodeStorage interface
type MockNodeStorage struct {
	ctrl     *gomock.Controller
	recorder *_MockNodeStorageRecorder
}

// Recorder for MockNodeStorage (not exported)
type _MockNodeStorageRecorder struct {
	mock *MockNodeStorage
}

func NewMockNodeStorage(ctrl *gomock.Controller) *MockNodeStorage {
	mock := &MockNodeStorage{ctrl: ctrl}
	mock.recorder = &_MockNodeStorageRecorder{mock}
	return mock
}

func (_m *MockNodeStorage) EXPECT() *_MockNodeStorageRecorder {
	return _m.recorder
}

func (_m *MockNodeStorage) GetSubtree(_param0 storage.NodeID) (*storage.SubtreeProto, error) {
	ret := _m.ctrl.Call(_m, "GetSubtree", _param0)
	ret0, _ := ret[0].(*storage.SubtreeProto)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockNodeStorageRecorder) GetSubtree(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "GetSubtree", arg0)
}

func (_m *MockNodeStorage) SetSubtree(_param0 *storage.SubtreeProto) error {
	ret := _m.ctrl.Call(_m, "SetSubtree", _param0)
	ret0, _ := ret[0].(error)
	return ret0
}

func (_mr *_MockNodeStorageRecorder) SetSubtree(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "SetSubtree", arg0)
}
