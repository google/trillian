sudo: true  # Only to move mysql onto ramdisk.
os: linux
dist: xenial
language: go
go: "1.11.x"
go_import_path: github.com/google/trillian

addons:
  apt:
    packages:
      - softhsm

cache:
  directories:
    - "$HOME/google-cloud-sdk/"
    - "$HOME/gopath/pkg/mod"

env:
  global:
  - GO111MODULE=on
  matrix:
  - PRESUB_TESTS=true                                      PRESUBMIT_OPTS="--coverage"
  - PRESUB_TESTS=true GOFLAGS='-race'                      PRESUBMIT_OPTS="--no-linters"
  - PRESUB_TESTS=true GOFLAGS='-race --tags=batched_queue' PRESUBMIT_OPTS="--no-linters"
  - PRESUB_TESTS=true GOFLAGS='-race' WITH_ETCD=true       PRESUBMIT_OPTS="--no-linters"
  - PRESUB_TESTS=true GOFLAGS='-race --tags=pkcs11' WITH_PKCS11=true PRESUBMIT_OPTS="--no-linters"
  - INTEG_TESTS=true                                       PRESUBMIT_OPTS="--coverage --no-linters"
  - INTEG_TESTS=true GOFLAGS='-race'                       PRESUBMIT_OPTS="--no-linters"
  - INTEG_TESTS=true GOFLAGS='-race --tags=batched_queue'  PRESUBMIT_OPTS="--no-linters"
  - INTEG_TESTS=true GOFLAGS='-race' WITH_ETCD=true        PRESUBMIT_OPTS="--no-linters"
  - INTEG_TESTS=true GOFLAGS='-race --tags=pkcs11' WITH_PKCS11=true PRESUBMIT_OPTS="--no-linters"
  - BAZEL_TESTS=true                                       PRESUBMIT_OPTS="--no-linters"
  - DOCKER_TESTS=true                                      PRESUBMIT_OPTS="--no-linters"

matrix:
  fast_finish: true

services:
  - docker
  - postgresql
  - mysql

before_install:
  - sudo service mysql stop
  - |
    if [[ "$TRAVIS_SUDO" == "true" ]]; then
      echo "Moving MySQL data to ramdisk..."
      sudo mkdir /mnt/ramdisk
      sudo mount -t tmpfs -o size=1024m tmpfs /mnt/ramdisk
      sudo mv /var/lib/mysql /mnt/ramdisk
      sudo ln -s /mnt/ramdisk/mysql /var/lib/mysql
    else
     echo "MySQL data staying on disk because sudo unavailable."
    fi
  - sudo service mysql start

install:
  - mkdir ../protoc
  - |
    (
      cd ../protoc
      wget "https://github.com/google/protobuf/releases/download/v3.5.1/protoc-3.5.1-${TRAVIS_OS_NAME}-x86_64.zip"
      unzip "protoc-3.5.1-${TRAVIS_OS_NAME}-x86_64.zip"
    )
  - export PATH="$(pwd)/../protoc/bin:$PATH"
  # googleapis is not Go code, but it's required for .pb.go regeneration because of API dependencies.
  - git clone --depth=1 https://github.com/googleapis/googleapis.git "$GOPATH/src/github.com/googleapis/googleapis"
  - go install
        github.com/golang/mock/mockgen
        github.com/golang/protobuf/proto
        github.com/golang/protobuf/protoc-gen-go
        github.com/grpc-ecosystem/grpc-gateway/protoc-gen-grpc-gateway
        github.com/pseudomuto/protoc-gen-doc/cmd/protoc-gen-doc
        github.com/uber/prototool/cmd/prototool
        golang.org/x/tools/cmd/stringer
        github.com/golangci/golangci-lint/cmd/golangci-lint
        go.etcd.io/etcd
        go.etcd.io/etcd/etcdctl

  # install bazel
  - |
    (
    if [[ "${BAZEL_TESTS}" == "true" ]]; then
        BAZEL_VERSION='0.18.0'
        URL="https://github.com/bazelbuild/bazel/releases/download/${BAZEL_VERSION}/bazel-${BAZEL_VERSION}-installer-linux-x86_64.sh"
        wget -O install.sh ${URL}
        chmod +x install.sh
        ./install.sh --user
        rm -f install.sh
      fi
    )

before_script:
  - ./scripts/resetdb.sh --force
  - ./scripts/mysqlconnlimit.sh --force
  - ./scripts/postgres_resetdb.sh --force

script:
  - set -e
  - cd "$HOME/gopath/src/github.com/google/trillian"
  - export GO_TEST_TIMEOUT=20m
  - |
    if [[ "${PRESUB_TESTS}" == "true" ]]; then
      ./scripts/presubmit.sh ${PRESUBMIT_OPTS}
      # Check re-generation didn't change anything. Skip protoc-generated files
      # because protoc is not deterministic when generating file descriptors.
      # Skip go.mod and go.sum because testing may add indirect dependencies that would be trimmed by 'go mod tidy'
      echo "Checking that generated files are the same as checked-in versions."
      git diff --exit-code -- ':!*.pb.go' ':!*_string.go' '!go.*'
    fi
  - |
      if [[ "${WITH_ETCD}" == "true" ]]; then
        export ETCD_DIR="${GOPATH}/bin"
      fi
  - |
    if [[ "${INTEG_TESTS}" == "true" ]]; then
      ./integration/integration_test.sh
      # See if we would break ct-go by checking it out and updating the trillian dep.
      TRILLIAN_DIR=$(pwd)
      git clone --depth=1 https://github.com/google/certificate-transparency-go.git "$GOPATH/src/github.com/google/certificate-transparency-go"
      pushd "$GOPATH/src/github.com/google/certificate-transparency-go" 
      echo "replace github.com/google/trillian => $TRILLIAN_DIR" >> go.mod
      chmod +x ./trillian/integration/integration_test.sh
      ./trillian/integration/integration_test.sh
      popd
      HAMMER_OPTS="--operations=50" ./integration/maphammer.sh 3
    fi
  - |
      # TODO(RJPercival): Make docker-compose integration test work when PKCS#11
      # support is enabled. This requires running softhsm in a Docker container.
      # See https://github.com/rolandshoemaker/docker-hsm for an example.
      if [[ "${DOCKER_TESTS}" == "true" ]]; then
        ./integration/docker_compose_integration_test.sh
      fi
  - |
      if [[ "${BAZEL_TESTS}" == "true" ]]; then
        bazel --batch build //:*
      fi
  - set +e

after_success:
  - bash <(curl -s https://codecov.io/bash)
