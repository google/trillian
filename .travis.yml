sudo: true  # Only to move mysql onto ramdisk.

language: go

addons:
  apt:
    sources:
      - mysql-5.7-trusty
    packages:
      - softhsm
      - mysql-server
      - mysql-client

cache:
  directories:
    - "$HOME/google-cloud-sdk/"

os:
  - linux

go:
  - "1.10"

go_import_path: github.com/google/trillian

env:
  - WITH_COVERAGE=true
  - GOFLAGS='-race'
  - GOFLAGS='-race --tags batched_queue'
  - GOFLAGS='-race' WITH_ETCD=true
  - GOFLAGS='-race --tags pkcs11' WITH_PKCS11=true

matrix:
  fast_finish: true

services:
  - docker
  - postgresql

before_install:
  - sudo mysql -e "use mysql; update user set authentication_string=PASSWORD('') where User='root'; update user set plugin='mysql_native_password';FLUSH PRIVILEGES;"
  - sudo mysql_upgrade
  - sudo service mysql stop
  - |
    if [[ "$TRAVIS_SUDO" == "true" ]]; then
      echo "Moving MySQL data to ramdisk..."
      sudo mkdir /mnt/ramdisk
      sudo mount -t tmpfs -o size=1024m tmpfs /mnt/ramdisk
      sudo mv /var/lib/mysql /mnt/ramdisk
      sudo ln -s /mnt/ramdisk/mysql /var/lib/mysql
    else
     echo "MySQL data staying on disk because sudo unavailable."
    fi
  - sudo service mysql start

install:
  - mkdir ../protoc
  - |
    (
      cd ../protoc
      wget "https://github.com/google/protobuf/releases/download/v3.5.1/protoc-3.5.1-${TRAVIS_OS_NAME}-x86_64.zip"
      unzip "protoc-3.5.1-${TRAVIS_OS_NAME}-x86_64.zip"
    )
  - export PATH="$(pwd)/../protoc/bin:$PATH"
  # googleapis is not Go code, but it's required for .pb.go regeneration because of API dependencies.
  - git clone --depth=1 https://github.com/googleapis/googleapis.git "$GOPATH/src/github.com/googleapis/googleapis"
  - go get ${GOFLAGS} -d -t ./...
  - go get -d -t github.com/google/certificate-transparency-go/...
  - go get github.com/alecthomas/gometalinter
  - go get github.com/golang/protobuf/proto
  - go get github.com/golang/protobuf/protoc-gen-go
  - go get github.com/grpc-ecosystem/grpc-gateway/protoc-gen-grpc-gateway
  - go get github.com/pseudomuto/protoc-gen-doc/cmd/protoc-gen-doc
  - go get github.com/golang/mock/mockgen
  - go get golang.org/x/tools/cmd/stringer
  - gometalinter --install
  # install vendored etcd binary
  - go install ./vendor/github.com/coreos/etcd/cmd/etcd
  - go install ./vendor/github.com/coreos/etcd/cmd/etcdctl


before_script:
  - ./scripts/resetdb.sh --force
  - ./scripts/mysqlconnlimit.sh --force
  - ./scripts/postgres_resetdb.sh --force

script:
  - set -e
  - cd "$HOME/gopath/src/github.com/google/trillian"
  - export GO_TEST_TIMEOUT=20m
  - ./scripts/presubmit.sh ${WITH_COVERAGE:+--coverage}
  - |
      # Check re-generation didn't change anything. Skip protoc-generated files
      # because protoc is not deterministic when generating file descriptors.
      echo "Checking that generated files are the same as checked-in versions."
      git diff --exit-code -- ':!*.pb.go' ':!*_string.go'
  - |
      if [[ "${WITH_ETCD}" == "true" ]]; then
        export ETCD_DIR="${GOPATH}/bin"
      fi
  - |
      ./integration/integration_test.sh
      cd "$HOME/gopath/src/github.com/google/certificate-transparency-go"
      ./trillian/integration/integration_test.sh
      cd $HOME/gopath/src/github.com/google/trillian
      HAMMER_OPTS="--operations=50" ./integration/maphammer.sh 3
  - |
      # TODO(RJPercival): Make docker-compose integration test work when PKCS#11
      # support is enabled. This requires running softhsm in a Docker container.
      # See https://github.com/rolandshoemaker/docker-hsm for an example.
      if ! $WITH_PKCS11; then
        ./integration/docker_compose_integration_test.sh
      fi
  - set +e

after_success:
  - bash <(curl -s https://codecov.io/bash)

